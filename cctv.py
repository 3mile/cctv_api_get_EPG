#-*- coding: utf-8 -*-                                                                                                                                  
import re
import requests
import json
import time
import codecs
import xml.etree.ElementTree as ET
# from bs4 import BeautifulSoup
from datetime import datetime, date, timedelta
from xml.dom import minidom

def get_time(times):
    time_r=time.strftime("%Y%m%d%H%M%S",time.localtime(int(times)))
    return time_r

def get_tomorrow():
    day=[]
    day.append(datetime.today().strftime('%Y%m%d'))
    now=datetime.today()
    delta=now+timedelta(days=1)
    date2=delta.strftime('%Y%m%d')
    day.append(date2)
    return day

def saveXML(root, filename, indent="\t", newl="\n", encoding="utf-8"):
    rawText = ET.tostring(root)
    dom = minidom.parseString(rawText)
    with codecs.open(filename, 'w', 'utf-8') as f:
        #writer = codecs.lookup('utf-8')[3](f)
        dom.writexml(f, "", indent, newl, encoding)


def prettyXml(element, indent, newline, level = 0): # elemnt为传进来的Elment类，参数indent用于缩进，newline用于换行    
    if element:  # 判断element是否有子元素    
        if element.text == None or element.text.isspace(): # 如果element的text没有内容    
            element.text = newline + indent * (level + 1)      
        else:    
            element.text = newline + indent * (level + 1) + element.text.strip() + newline + indent * (level + 1)    
    #else:  # 此处两行如果把注释去掉，Element的text也会另起一行    
        #element.text = newline + indent * (level + 1) + element.text.strip() + newline + indent * level    
    temp = list(element) # 将elemnt转成list    
    for subelement in temp:    
        if temp.index(subelement) < (len(temp) - 1): # 如果不是list的最后一个元素，说明下一个行是同级别元素的起始，缩进应一致    
            subelement.tail = newline + indent * (level + 1)    
        else:  # 如果是list的最后一个元素， 说明下一行是母元素的结束，缩进应该少一个    
            subelement.tail = newline + indent * level    
        prettyXml(subelement, indent, newline, level = level + 1) # 对子元素进行递归操作  

def cctv_api_epg(ch_list):
    url="http://api.cntv.cn/epg/epginfo"
    day=get_tomorrow()

    for d in day:
        ch=",".join(ch_list)
        pay_dict={"c":ch,"d":d}
        r = requests.get(url,pay_dict)
        html = r.text.encode('utf-8') 
        programme_dict=json.loads(html)

        for title,items in programme_dict.items():
            channel_title=title
            channel_name=items["channelName"]

            flug=1
            for attrib in root.findall("*[@id]"):
                temp=attrib.get('id')
                if channel_title==temp:
                    flug=0
            if flug==1:
                index=len(root.findall('channel'))
                child=ET.Element('channel')
                root.insert(index,child)
                child.set("id",channel_title)

                child_name=ET.SubElement(child,"display-name")
                child_name.set("lang","zh")
                child_name.text=channel_name

            for programs in items["program"]:
                # print("title=",channel_title,"channelname=",channel_name)
                title=programs['t']
                starttime=get_time(programs['st'])
                endtime=get_time(programs['et'])

                programme_sub=ET.SubElement(root,"programme")
                programme_sub.set("start",starttime+" +0800")
                programme_sub.set("stop",endtime+" +0800")
                programme_sub.set("channel",channel_title)

                programme_title=ET.SubElement(programme_sub,"title")
                programme_title.set("lang","zh")
                programme_title.text=title

cctv_channel = ['cctv1','cctv2','cctv3','cctv4','cctv5','cctv5plus','cctv6','cctv7','cctv8','cctvjilu',
        'cctv10','cctv11','cctv12','cctv13','cctvchild','cctv15','cctv17']
sat_channel = ['hubei','hunan','zhejiang','jiangsu','dongfang','btv1',
        'guangdong','shenzhen','heilongjiang','tianjin','shandong','anhui','liaoning',
        'bingtuan','chongqing','dongnan','guangxi','gansu','guizhou','hebei','henan',
        'jilin','jiangxi','travel','neimenggu','ningxia','qinghai','shan3xi','shan1xi',
        'sichuan','xizang','xinjiang','yunnan','btvjishi','cdtv1','cdtv2new','cdtv5']

root = ET.Element('tv')
root.set("generator-info-name", "Generated by 3mile")
root.set("generator-info-url", "https://3mile.top")


cctv_api_epg(cctv_channel)
cctv_api_epg(sat_channel)

saveXML(root,"cctv.xml")
